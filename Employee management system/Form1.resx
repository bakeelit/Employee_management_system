<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnUser.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        kGwDvdmQFQAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="styleManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>19, 3</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>43</value>
  </metadata>
</root>